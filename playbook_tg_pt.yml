- name: Instalation for all hosts
  hosts: all
  gather_facts: false
  become: true
  tasks:
  - name: Install PostgreSQL
    apt: name={{ item }} update_cache=true state=present
    with_items:
    - postgresql
    - postgresql-contrib
    - libpq-dev
    - python3-psycopg2
    - git

  - name: Create directory ansible for files
    file:
      path: "{{ hostvars[inventory_hostname]['dir_remote'] }}"
      state: directory
    become: true

  - name: Ensure PostgreSQL service is started and enabled
    service:
      name: postgresql
      state: started
      enabled: true
    become: true

- name: DB initialization
  hosts: db_bot
  gather_facts: true
  tasks:
  - name: Copy initialization script
    copy:
      src: "{{ hostvars[inventory_hostname]['dir'] }}/init.sql"
      dest: /tmp/init.sql
      mode: '0644'
    become: true

  - name: Change ownership of the initialization script
    file:
      path: /tmp/init.sql
      owner: postgres
      group: postgres
      mode: '0644'
    become: true

  - name: Restart PostgreSQL
    service:
      name: postgresql
      state: restarted
    become: true

  - name: Execute initialization script
    command: psql -a -f /tmp/init.sql
    become: true
    become_user: postgres

- name: Replication configuration
  hosts: all
  gather_facts: true
  tasks:
  - name: Manage postgresql.conf
    lineinfile:
      path: "/etc/postgresql/14/main/postgresql.conf"
      line: "{{ item }}"
      state: present
    with_items:
      - "listen_addresses = '*'"
      - "wal_level=replica"
      - "hot_standby=on"
      - "max_wal_senders=10"
      - "max_replication_slots=10"
      - "hot_standby_feedback=on"
      - "log_replication_commands=on"
      - "logging_collector=on" 
      - "log_directory='/var/log/postgresql'" 
      - "log_destination='stderr'"
      - "log_filename='postgres.log'"
    become: true

  - name: Manage pg_hba.conf
    lineinfile:
      path: "/etc/postgresql/14/main/pg_hba.conf"
      line: "{{ item }}"
      state: present
    with_items:
      - "host replication all {{ hostvars[inventory_hostname]['DB_REPL_HOST'] }}/24 scram-sha-256"
      - "host all all all md5"
    become: true

  - name: Restart PostgreSQL
    service:
      name: postgresql
      state: restarted
    become: true

- name: DB repl initialization
  hosts: db_repl
  gather_facts: true
  tasks:
  - name: Ensure PostgreSQL service is started and enabled
    service:
      name: postgresql
      state: started
      enabled: true
    become: true

  - name: Stop PostgreSQL service temporarily
    systemd:
      name: postgresql
      state: stopped
    become: true

  - name: Remove previous data
    file:
      path: /var/lib/postgresql/14/main
      state: absent
    become: true

  - name: copying data from master
    command: pg_basebackup -h {{ hostvars[inventory_hostname]['DB_HOST'] }} -D /var/lib/postgresql/14/main -U {{ hostvars[inventory_hostname]['DB_REPL_USER'] }} -vP -w
    environment: 
      PGPASSWORD: "{{ hostvars[inventory_hostname]['DB_REPL_PASSWORD'] }}"
    become: true

  - name: Change ownership of PostgreSQL data directory
    file:
      path: /var/lib/postgresql/14
      owner: postgres
      group: postgres
      recurse: yes
    become: true

  - name: restart postgresql
    service:
      name: postgresql
      state: restarted
    become: true

- name: Initializing bot
  hosts: db_bot
  gather_facts: true
  tasks:
  - name: Create repo directory
    file:
      path: "{{ hostvars[inventory_hostname]['dir_remote'] }}/repo"
      state: directory
      mode: '0755'
    become: true

  - name: Clone git repository
    git:
      repo: "{{ hostvars[inventory_hostname]['github_repo'] }}"
      dest: "{{ hostvars[inventory_hostname]['dir_remote'] }}/repo"
      version: main
    become: true

  - name: Copy .env file
    template:
      src: .env
      dest: "{{ hostvars[inventory_hostname]['dir_remote'] }}/repo/.env"
    become: true

  - name: Install Python requirements
    pip: 
      requirements: "{{ hostvars[inventory_hostname]['dir_remote'] }}/repo/requirements.txt"
    become: true

  - name: Run bot
    command: python3 "{{ hostvars[inventory_hostname]['dir_remote'] }}/repo/bot.py"
    become: true
